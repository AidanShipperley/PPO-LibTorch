# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows 2019 Build (LibTorch 2.2.2, CUDA 11.8.0)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  LIBTORCH_URL: https://download.pytorch.org/libtorch/cu118/libtorch-win-shared-with-deps-2.2.2%2Bcu118.zip
  NINJA_URL: https://github.com/ninja-build/ninja/releases/download/v1.12.1/ninja-win.zip

jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Install CUDA Toolkit
      uses: Jimver/cuda-toolkit@v0.2.15
      id: cuda-toolkit-windows
      with:
        cuda: '11.8.0'
        method: 'network'
        sub-packages: '["nvcc", "nvtx", "nsight_nvtx", "nvrtc", "nvrtc_dev", "cudart", "visual_studio_integration"]'

    - name: Test All Required Build Tools Function
      run: |
        echo "Installed cuda version is: ${{steps.cuda-toolkit-windows.outputs.cuda}}"
        echo "Cuda install location: ${{steps.cuda-toolkit-windows.outputs.CUDA_PATH}}"
        cl
        nvcc -V
        cmake --version
        ninja --version

    - name: Add CUDA Toolkit Paths
      run: |
        echo "CUDAToolkit_ROOT=${{ steps.cuda-toolkit-windows.outputs.CUDA_PATH }}" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV

    - name: Download and Install LibTorch
      run: |
        Start-BitsTransfer -Source ${{ env.LIBTORCH_URL }} -Destination libtorch.zip
        Expand-Archive -Path libtorch.zip -DestinationPath libtorch
        echo "LibTorch_ROOT=$PWD\libtorch\libtorch" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV

    - name: Configure CMake
      run: |
        cmake --preset x64-release -DCUDAToolkit_ROOT="${{ env.CUDAToolkit_ROOT }}" -DTORCH_CUDA_ARCH_LIST="8.0 8.6 8.9 9.0" -DCMAKE_PREFIX_PATH="${{ env.LibTorch_ROOT }}"

    - name: Build
      run: |
        cd .\build\x64-release\
        cmake --build . --config ${{ env.BUILD_TYPE }}
